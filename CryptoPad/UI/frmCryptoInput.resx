<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="OFD.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>